#!/bin/bash
# Version: 2.0 Optimized
# Description: Optimized installation script for pentest tools
# Note: This script is now mainly for reference - tools are installed in Dockerfile

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() { echo -e "${GREEN}[$(date '+%H:%M:%S')]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }

main() {
    log "Setup tools script v2.0 - Optimized for Docker"
    
    # Check if main tools are already installed
    if command -v nmap &> /dev/null && command -v httpx &> /dev/null; then
        log "✅ All tools are already installed"
        log "✅ httpx version: $(httpx -version 2>&1 | head -n1)"
        log "✅ nmap version: $(nmap --version | head -n1)"
        log "✅ nuclei version: $(nuclei -version 2>&1 | head -n1)"
        return 0
    fi
    
    warn "Some tools are missing. This should not happen if using the optimized Dockerfile."
    warn "Installing missing tools..."
    
    # Update system only if necessary
    if [ ! -f /var/lib/apt/lists/lock ]; then
        log "Updating system packages..."
        apt update && apt upgrade -y
    fi
    
    # Install basic tools if missing
    local tools=(nmap whatweb curl wordlists hydra sshpass metasploit-framework nuclei golang-go)
    local missing_tools=()
    
    for tool in "${tools[@]}"; do
        if ! dpkg -l | grep -q "^ii  $tool "; then
            missing_tools+=("$tool")
        fi
    done
    
    if [ ${#missing_tools[@]} -gt 0 ]; then
        log "Installing missing tools: ${missing_tools[*]}"
        apt install -y "${missing_tools[@]}"
    fi
    
    # Configure Go PATH if not configured
    if ! grep -q "go/bin" ~/.bashrc; then
        log "Configuring Go PATH..."
        export PATH=$PATH:/root/go/bin
        echo 'export PATH=$PATH:/root/go/bin' >> ~/.bashrc
    fi
    
    # Install httpx if not installed
    if ! command -v httpx &> /dev/null; then
        log "Installing httpx..."
        go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
    fi
    
    # Check rockyou.txt
    if [ -f /usr/share/wordlists/rockyou.txt.gz ]; then
        log "Decompressing rockyou.txt..."
        gzip -d /usr/share/wordlists/rockyou.txt.gz
    fi
    
    # Create userlist if it doesn't exist
    if [ ! -f /usr/share/wordlists/usernames.txt ]; then
        log "Creating usernames wordlist..."
        cat > /usr/share/wordlists/usernames.txt << 'EOF'
root
admin
user
test
guest
solana
validator
rpc
node
service
daemon
EOF
    fi
    
    # Clean cache
    log "Cleaning package cache..."
    apt clean && apt autoclean
    rm -rf /var/lib/apt/lists/*
    
    log "✅ Setup completed successfully!"
}

# Only execute if called directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
